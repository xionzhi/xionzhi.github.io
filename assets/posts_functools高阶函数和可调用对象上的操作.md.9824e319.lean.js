import{_ as s,o as n,c as a,a as l}from"./app.06916134.js";const i=JSON.parse('{"title":"functools高阶函数和可调用对象上的操作","description":"","frontmatter":{"title":"functools高阶函数和可调用对象上的操作","author":"xionzhi","date":"2023-01-05","showAccessNumber":true,"categories":["python"],"tags":["python"],"excerpt":"一个为函数提供缓存功能的装饰器，缓存 *maxsize* 组传入参数，在下次以相同参数调用时直接返回上一次的结果。用以节约高开销或I/O函数的调用时间。\\n```python @lru_cache def test_lru_cache(self, a=None, b=None): time.sleep(1) return f\'{a}: {b}: {time.time()}\'\\nprint(tf.test_lru_cache(a=1, b=2)) print(tf.test_lru_cache(a=1, b=2)) print(tf.test_lru_cache(a=1, b=2)) print(tf.test_lru_cache(a=1, b=2))\\n# 1: 2: 1663580739.8764858 # 1: 2: 1663580739.8764858 # 1: 2: 1663580739.8764858 # 1: 2: 1663580739.8764858 ``` "},"headers":[],"relativePath":"posts/functools高阶函数和可调用对象上的操作.md"}'),p={name:"posts/functools高阶函数和可调用对象上的操作.md"},o=l("",31),e=[o];function t(c,r,F,y,D,A){return n(),a("div",null,e)}const d=s(p,[["render",t]]);export{i as __pageData,d as default};
